<?php

/**
 * This is the model base class for the table "profissional".
 * DO NOT MODIFY THIS FILE! It is automatically generated by AweCrud.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Profissional".
 *
 * Columns in table "profissional" available as properties of the model,
 * followed by relations of table "profissional" available as properties of the model.
 *
 * @property integer $id
 * @property integer $utilizador
 *
 * @property Utilizador $utilizador0
 * @property Visita[] $visitas
 */
abstract class BaseProfissional extends AweActiveRecord {

    public static function model($className=__CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'profissional';
    }

    public static function representingColumn() {
        return 'id';
    }

    public function rules() {
        return array(
            array('utilizador', 'required'),
            array('utilizador', 'numerical', 'integerOnly'=>true),
            array('id, utilizador', 'safe', 'on'=>'search'),
        );
    }

    public function relations() {
        return array(
            'utilizador0' => array(self::BELONGS_TO, 'Utilizador', 'utilizador'),
            'visitas' => array(self::HAS_MANY, 'Visita', 'profissional'),
        );
    }

    /**
     * @return array customized attribute labels (name=>label)
     */
    public function attributeLabels() {
        return array(
                'id' => Yii::t('app', 'ID'),
                'utilizador' => Yii::t('app', 'Utilizador'),
                'utilizador0' => null,
                'visitas' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('utilizador', $this->utilizador);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    public function behaviors() {
        return array_merge(array(
        ), parent::behaviors());
    }
}